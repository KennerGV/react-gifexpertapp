{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","console","log","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAIaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAIRC,mBAAS,IAJD,mBAIrCC,EAJqC,KAIzBC,EAJyB,KAqB5C,OACI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAC,OAAGP,GAAH,mBAAiBO,OAChCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SApBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCTlBG,EAAc,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAG/B,OACI,yBAAKC,UAAU,0CACZ,yBAAKC,IAAKF,EAAIG,IAAKJ,IAClB,2BAAIA,K,uBCNHK,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbN,EAFa,gDAEkCO,UAAUF,GAF5C,gEAGAG,MAAMR,GAHN,cAGbS,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAGD,EAAIC,GACPhB,MAAMe,EAAIf,MACVC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAVvB,kBAaZY,GAbY,4CAAH,sDCGPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZpB,mBAAS,CAC/B0B,KAAK,GACLQ,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAoBtC,OAdAC,qBAAU,WACNlB,EAAQC,GACHkB,MAAK,SAAAC,GAGFH,EAAS,CACTV,KAAKa,EACLL,SAAS,SAIlB,CAACd,IAGGe,EDfuBK,CAAapB,GAA/BW,EAJuB,EAI5BL,KAAYQ,EAJgB,EAIhBA,QAWnB,OATAO,QAAQC,IAAIR,GAUR,oCACI,wBAAIlB,UAAW,qCAAqCI,GAEnDc,GAAW,uBAAGlB,UAAW,oCAAd,WAEZ,yBAAKA,UAAU,aAIPe,EAAOH,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIc,IAAKd,EAAIC,IACLD,UE7BnBe,EAAe,WAAM,MAGM5C,mBAAS,CAAC,cAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAU9B,OACI,oCACG,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWjB,KAAI,SAAAR,GAAQ,OAClB,kBAAC,EAAD,CACIuB,IAAKvB,EACLA,SAAUA,UClBtC0B,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.c1a0d681.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n// import  {GifExpertApp} from '../GifExpertApp'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    \r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategories(c=>[inputValue,...c]);\r\n            setinputValue('');\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    );\r\n\r\n    \r\n}\r\nAddCategory.propTypes={\r\n    setCategories:PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n           <img src={url}alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\nexport const getGifs = async(category) => {\r\n\r\n    const url = `http://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}$&limit=10&api_key=X2XUcDNrINDc7l49ssaHQzxUVFzKukYB`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n    \r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n    // console.log(data);\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then(setImages);\r\n\r\n    // },[category])\r\n    // getGifs();\r\n    return (\r\n        <>\r\n            <h3 className= \"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n            {loading && <p className= \"animate__animated animate__flash\">Loading</p>}\r\n\r\n            <div className=\"card-grid\">\r\n            \r\n            \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img }\r\n                        />\r\n                    ))\r\n                }           \r\n            \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs=>{\r\n\r\n                // console.log(imgs);\r\n                setstate({\r\n                data:imgs,\r\n                loading: false\r\n                })\r\n           \r\n            });\r\n    }, [category])\r\n\r\n    \r\n    return state;\r\n}\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    // const categories = ['One Punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = (e) => {\r\n    //     setCategories(c=>[...c,'Naruto']);\r\n        \r\n    // }\r\n\r\n    return (\r\n        <>\r\n           <h2 >GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories}/>\r\n           <hr/>\r\n\r\n           <ol>\r\n               {\r\n                   categories.map(category => (\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}/>\r\n                   ))\r\n               }\r\n           </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}